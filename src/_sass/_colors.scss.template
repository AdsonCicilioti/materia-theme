// When color definition differs for dark and light variant,
// it gets @if ed depending on $variant

@import 'color-palette';

@function gtkalpha($c, $a) {
  @return unquote("alpha(#{$c}, #{$a})");
}

// Determine whether the color is "light" or "dark".
@function tone($color) {
  @if $color == "dark" or $color == "light" {
    @return $color;
  }

  // Calculate color brightness as per https://www.w3.org/TR/AERT/#color-contrast
  $brightness: (red($color) * 299 + green($color) * 587 + blue($color) * 114) / 1000;

  @if $brightness >= 128 {
    @return "light";
  } @else {
    @return "dark";
  }
}

// Determine whether to use dark or light color on top of given color to meet accessibility standards for contrast.
@function on($color, $type: text) {
  $contrast-tone: if(tone($color) == "dark", "light", "dark");

  @if not map-has-key(map-get($on-colors, $contrast-tone), $type) {
    @error "Invalid type: '#{$type}'";
  }

  @return map-get(map-get($on-colors, $contrast-tone), $type);
}

$on-colors: (
  dark: (
    primary: %SEL_BG%,
    error: %TERMINAL_COLOR9%,
    text: rgba(black, .87),
    text2: rgba(black, .6),
    text-disabled: rgba(black, .38),
    text2-disabled: rgba(black, .26),
    stroke: rgba(black, .26),
    stroke-disabled: rgba(black, .12),
    divider: rgba(black, .12),
    fill: rgba(black, .08),
    entry-fill: rgba(black, .04)
  ),
  light: (
    primary: %SEL_BG%,
    error: %TERMINAL_COLOR9%,
    text: white,
    text2: rgba(white, .7),
    text-disabled: rgba(white, .5),
    text2-disabled: rgba(white, .3),
    stroke: rgba(white, .3),
    stroke-disabled: rgba(white, .12),
    divider: rgba(white, .12),
    fill: rgba(white, .08),
    entry-fill: rgba(white, .04)
  )
);

// Determine the strength of highlight on top of given color.
@function highlight($color) {
  @if lightness($color) >= 80% {
    @return rgba(white, .4);
  } @else if lightness($color) >= 40% {
    @return rgba(white, .2);
  } @else {
    @return rgba(white, .1);
  }
}

//
// Basic colors
//

$background:                            %BG%;
$surface:                               %MATERIA_SURFACE%;
$base:                                  %MATERIA_VIEW%;
$base-alt:                              %INACTIVE_MATERIA_VIEW%;

$os-background:                         %HDR_BG3%;
$tooltip:                               rgba(%HDR_BG%, 0.9);
$scrim:                                 rgba(black, %MATERIA_PANEL_OPACITY%);
$scrim-alt:                             rgba(black, 0.3);
$scrim-inverse:                         rgba(white, 0.1);
$titlebar:                              %HDR_BG%;
$titlebar-backdrop:                     %HDR_BG2%;
$panel:                                 if($topbar == 'dark', %HDR_BG3%, $scrim);
$panel-solid:                           %HDR_BG3%; // for Unity panel which doesn't allow translucent colors

//
// Misc colors
//

$primary:                               on($background, primary);

$link:                                  $primary;
$link-visited:                          %TERMINAL_COLOR5%;

$error:                                 on($background, error);
$warning:                               %TERMINAL_COLOR11%;
$success:                               %TERMINAL_COLOR10%;

$suggested:                             $primary;
$destructive:                           $error;

$frame:                                 if($variant == 'light', rgba(black, 0.12), rgba(black, 0.26)); // instead of shadows
$border-alt:                            rgba(black, 0.26); // darker border color for Chrome and Firefox
$titlebar-indicator:                    if($topbar == 'dark', currentColor, $primary);

//
// Overlay state colors
//

$overlay-hover:                         gtkalpha(currentColor, 0.08);
$overlay-focus:                         gtkalpha(currentColor, 0.08);
$overlay-focus-hover:                   gtkalpha(currentColor, 0.16);
$overlay-active:                        gtkalpha(currentColor, 0.12);
$overlay-checked:                       gtkalpha(currentColor, 0.12);
$overlay-selected:                      rgba($primary, %MATERIA_SELECTION_OPACITY%);

//
// Text and derivative colors
//

$text:                                  %FG%;
$text2:                                 rgba(%FG%, 0.7);
$text-disabled:                         rgba(%FG%, 0.5);
$text2-disabled:                        rgba(%FG%, 0.3);
$stroke:                                rgba(%FG%, 0.3);
$stroke-disabled:                       rgba(%FG%, 0.12);
$divider:                               rgba(%FG%, 0.12);
$fill:                                  rgba(%FG%, 0.08);
$entry-fill:                            rgba(%FG%, 0.04);

$titlebar-text:                         %HDR_FG%;
$titlebar-text2:                        rgba(%HDR_FG%, 0.7);
$titlebar-text-disabled:                rgba(%HDR_FG%, 0.5);
$titlebar-text2-disabled:               rgba(%HDR_FG%, 0.3);
$titlebar-stroke:                       rgba(%HDR_FG%, 0.3);
$titlebar-stroke-disabled:              rgba(%HDR_FG%, 0.12);
$titlebar-divider:                      rgba(%HDR_FG%, 0.12);
$titlebar-fill:                         rgba(%HDR_FG%, 0.08);
$titlebar-entry-fill:                   rgba(%HDR_FG%, 0.04);

// workaround for GTK3 @placeholder_text_color which doesn't allow translucent colors
$placeholder_text_color:                mix(%FG%, $base, percentage(0.7));
